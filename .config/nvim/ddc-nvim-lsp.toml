[[plugins]]
repo = 'neovim/nvim-lspconfig'
on_event = 'VimEnter'
hook_source = '''
lua require('nvim_lsp')

autocmd BufWritePre <buffer> lua vim.lsp.buf.formatting_sync()

'''

[[plugins]]
repo = 'Shougo/ddc.vim'
on_event = 'VimEnter'
hook_source = '''

" Customize global settings

" Set sources used.
call ddc#custom#patch_global('sources', ['nvim-lsp', 'around'])

call ddc#custom#patch_global('completionMenu', 'pum.vim')

" Change source options
call ddc#custom#patch_global('sourceOptions', {
    \ 'nvim-lsp': {
    \   'matchers': ['matcher_head'],
    \   'sorters': ['sorter_rank'],
    \   'mark': 'lsp',
    \   'forceCompletionPattern': '\.\w*|:\w*|->\w*'
    \ },
    \ 'around': {
    \   'matchers': ['matcher_head'],
    \   'sorters': ['sorter_rank'],
    \   'mark': 'A',
    \ },
    \ })

" Change source params
call ddc#custom#patch_global('sourceParams', {
    \ 'vim-lsp': {
    \   'maxSize': 100,
    \ },
    \ 'around': {
    \   'maxSize': 100,
    \ },
    \ })

" Mappings
" <TAB>: completion.
inoremap <silent><expr> <TAB>
\ pumvisible() ? '<C-n>' :
\ (col('.') <= 1 <Bar><Bar> getline('.')[col('.') - 2] =~# '\s') ?
\ '<TAB>' : ddc#manual_complete()
" <S-TAB>: completion back.
inoremap <expr><S-TAB>  pumvisible() ? '<C-p>' : '<C-h>'
" Use ddc.
call ddc#enable()
'''

[[plugins]]
repo = 'Shougo/ddc-around'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-matcher_head'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-sorter_rank'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-nvim-lsp'
on_source = 'ddc.vim'

[[plugins]]
repo = 'matsui54/ddc-nvim-lsp-doc'
on_source = 'ddc.vim'
hook_source = '''

let g:ddc_nvim_lsp_doc_config = {
      \ 'documentation': {
      \   'enable': v:true,
      \   'border': 'rounded',
      \   'maxWidth': 60,
      \   'maxHeight': 30,
      \ },
      \ 'signature': {
      \   'border': 'rounded',
      \ },
      \ }

call ddc_nvim_lsp_doc#enable()

'''

[[plugins]]
repo = 'Shougo/pum.vim'
hook_source = '''

inoremap <Tab>   <Cmd>call pum#map#insert_relative(+1)<CR>
inoremap <S-Tab> <Cmd>call pum#map#insert_relative(-1)<CR>
inoremap <C-n>   <Cmd>call pum#map#insert_relative(+1)<CR>
inoremap <C-p>   <Cmd>call pum#map#insert_relative(-1)<CR>
inoremap <C-y>   <Cmd>call pum#map#confirm()<CR>
inoremap <C-e>   <Cmd>call pum#map#cancel()<CR>
inoremap <PageDown> <Cmd>call pum#map#insert_relative_page(+1)<CR>
inoremap <PageUp>   <Cmd>call pum#map#insert_relative_page(-1)<CR>

'''