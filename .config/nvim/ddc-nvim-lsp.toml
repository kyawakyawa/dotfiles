[[plugins]]
repo = 'neovim/nvim-lspconfig'
on_event = 'VimEnter'
hook_source = '''
lua require('nvim_lsp_cfg')

set completeopt-=preview " Previewを出さない

" 保存時にフォーマットする
" 10000ms(10s) でtimeoutする
" フォーマットしたくないときは :noautocmd w と打つ
autocmd BufWritePre <buffer> lua vim.lsp.buf.formatting_sync({}, 10000)

'''

[[plugins]]
repo = 'Shougo/ddc.vim'
depends = ['pum.vim']
on_event = 'InsertEnter'
hook_source = '''

" Customize global settings

" Set sources used.
call ddc#custom#patch_global('sources', ['nvim-lsp', 'around', 'vsnip', 'buffer', 'dictionary'])

" Set Completion Menu
" call ddc#custom#patch_global('completionMenu', 'native')
call ddc#custom#patch_global('completionMenu', 'pum.vim')

" Change source options
call ddc#custom#patch_global('sourceOptions', {
    \ 'nvim-lsp': {
    \   'matchers': ['matcher_fuzzy'],
    \   'sorters': ['sorter_fuzzy'],
    \   'converters': ['converter_fuzzy'],
    \   'mark': 'lsp',
    \   'forceCompletionPattern': '\.\w*|:\w*|->\w*'
    \ },
    \ 'around': {
    \   'matchers': ['matcher_head'],
    \   'sorters': ['sorter_rank'],
    \   'mark': 'A',
    \ },
    \ 'vsnip': {
    \   'matchers': ['matcher_head'],
    \   'sorters': ['sorter_rank'],
    \   'mark': 'snip',
    \ },
    \ 'buffer': {
    \   'matchers': ['matcher_head'],
    \   'sorters': ['sorter_rank'],
    \   'mark': 'B',
    \ },
    \ 'dictionary': {
    \   'matchers': ['matcher_fuzzy'],
    \   'sorters': ['sorter_fuzzy'],
    \   'converters': ['converter_fuzzy'],
    \   'maxCandidates': 16, 
    \   'mark': 'D', 
    \   'minAutoCompleteLength': 3,
    \ },
    \ })

" Change source params
call ddc#custom#patch_global('sourceParams', {
    \ 'nvim-lsp': {
    \   'maxSize': 100,
    \ },
    \ 'around': {
    \   'maxSize': 100,
    \ },
    \ 'buffer': {
    \   'requireSameFiletype': v:false,
    \   'limitBytes': 5000000,
    \   'fromAltBuf': v:true,
    \   'forceCollect': v:true,
    \ },
    \ 'dictionary': {
    \   'dictPaths': ['/usr/share/dict/words'],
    \   'smartCase': v:true,
    \   'showMenu': v:false
    \ },
    \ })

" Use ddc.
call ddc#enable()
'''

[[plugins]]
repo = 'Shougo/ddc-around'
on_source = 'ddc.vim'

[[plugins]]
repo = 'matsui54/ddc-buffer'
on_source = 'ddc.vim'

[[plugins]]
repo = 'matsui54/ddc-dictionary'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-matcher_head'
on_source = 'ddc.vim'

[[plugins]]
repo = 'tani/ddc-fuzzy'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-sorter_rank'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-nvim-lsp'
on_source = 'ddc.vim'

[[plugins]]
repo = 'matsui54/denops-popup-preview.vim'
on_source = 'ddc.vim'
hook_source = '''
	let g:popup_preview_config = {
	      \ 'delay': 10,
        \ 'maxWidth': 100,
        \ 'winblend': 0,
	      \ }
  call popup_preview#enable()
'''

[[plugins]]
repo = 'ray-x/lsp_signature.nvim'
if = "has('nvim')"
on_source = 'nvim-lspconfig'
hook_source= '''
lua require('lsp_signature_cfg')
'''

[[plugins]]
repo = 'hrsh7th/vim-vsnip'
on_source = 'ddc.vim'
depends = ['vim-vsnip-integ']
hook_add = '''

" pum.vimとvsnipを合わせて使うときに必要 Tabでスニペットの展開とジャンプができるようになる
function s:trigger_completedone()
  let info = pum#complete_info()
  let complete_item = info.items[info.selected]
  call vsnip_integ#on_complete_done(complete_item)
  if vsnip#available(1)
    return "\<Plug>(vsnip-expand-or-jump)"
  else
    return "\<Tab>"

  "return "\<Ignore>"
endfunction

imap <expr> <Tab> <SID>trigger_completedone()
smap <expr> <Tab> <SID>trigger_completedone()

" imap <expr> <Tab>   vsnip#available(1)  ? '<Plug>(vsnip-expand-or-jump)' : '<Tab>'
" smap <expr> <Tab>   vsnip#available(1)  ? '<Plug>(vsnip-expand-or-jump)' : '<Tab>'

imap <expr> <S-Tab> vsnip#jumpable(-1)  ? '<Plug>(vsnip-jump-prev)'      : '<S-Tab>'
smap <expr> <S-Tab> vsnip#jumpable(-1)  ? '<Plug>(vsnip-jump-prev)'      : '<S-Tab>'
'''

[[plugins]]
repo = 'hrsh7th/vim-vsnip-integ'
on_source = 'ddc.vim'

[[plugins]]
repo = 'kyawakyawa/pum.vim'
hook_source = '''
inoremap <C-n>   <Cmd>call pum#map#insert_relative(+1)<CR>
inoremap <C-p>   <Cmd>call pum#map#insert_relative(-1)<CR>
inoremap <C-y>   <Cmd>call pum#map#confirm()<CR>
inoremap <C-e>   <Cmd>call pum#map#cancel()<CR>
inoremap <PageDown> <Cmd>call pum#map#insert_relative_page(+1)<CR>
inoremap <PageUp>   <Cmd>call pum#map#insert_relative_page(-1)<CR>

hi NoneBg guibg=none

" TODO denops-popup-preview.vimとかぶってしまうのを直す -> Done
call pum#set_option('border', 'rounded') 

call pum#set_option('highlight_normal_menu', "NoneBg")
'''
